// Generated by ReScript, PLEASE EDIT WITH CARE

import * as WebGL from "../Bindings/WebGL.mjs";
import * as React from "react";
import * as Three from "three";
import * as Network from "../BackgroundScenes/Network.mjs";
import * as Pentagon from "../BackgroundScenes/Pentagon.mjs";
import * as BallWorld from "../BackgroundScenes/BallWorld.mjs";
import * as Caml_array from "rescript/lib/es6/caml_array.js";
import * as Dom_storage from "rescript/lib/es6/dom_storage.js";

function saveToLocalStorage(key, data) {
  return Dom_storage.setItem(key, data, localStorage);
}

function loadFromLocalStorage(key) {
  return Dom_storage.getItem(key, localStorage);
}

function selectScene(currentScene) {
  switch (currentScene) {
    case /* Laser */0 :
        return /* Pentagon */1;
    case /* Pentagon */1 :
        return /* Ball */2;
    case /* Ball */2 :
        return /* Network */3;
    case /* Network */3 :
        return /* Laser */0;
    
  }
}

function sceneToString(scene) {
  switch (scene) {
    case /* Laser */0 :
        return "Laser";
    case /* Pentagon */1 :
        return "Pentagon";
    case /* Ball */2 :
        return "Ball";
    case /* Network */3 :
        return "Network";
    
  }
}

function stringToScene(scene) {
  switch (scene) {
    case "Ball" :
        return /* Ball */2;
    case "Laser" :
        return /* Laser */0;
    case "Network" :
        return /* Network */3;
    case "Pentagon" :
        return /* Pentagon */1;
    default:
      return /* Pentagon */1;
  }
}

function animate(currentScene, camera, scene, renderer) {
  setTimeout((function (param) {
          var idAnimationFrame = requestAnimationFrame(function (param) {
                if (WebGL.validElementById("webgl-canvas")) {
                  return animate(currentScene, camera, scene, renderer);
                }
                
              });
          var currentScene_localStorage = Dom_storage.getItem("current-scene", localStorage);
          if (currentScene_localStorage !== undefined && currentScene_localStorage !== sceneToString(currentScene)) {
            cancelAnimationFrame(idAnimationFrame);
            return ;
          }
          
        }), 41);
  if (currentScene !== 2) {
    if (currentScene >= 3) {
      Network.NetworkScene.animate(undefined);
    } else {
      Pentagon.PentagonScene.animate(undefined);
    }
  } else {
    BallWorld.BallWorldScene.animate(undefined);
  }
  renderer.render(scene, camera);
  
}

function renderScene(scene) {
  if (WebGL.isSupportingWebGl(undefined)) {
    setTimeout((function (param) {
            var element = document.getElementById("webgl-background");
            var camera = WebGL.Three.getCamera(element);
            camera.position.z = 1000;
            camera.rotation.x = 0;
            camera.rotation.y = 0;
            if (!WebGL.validElementById("webgl-canvas")) {
              WebGL.setIdToElement(WebGL.Three.renderer.domElement, "webgl-canvas");
              WebGL.Three.onResize(element);
            }
            WebGL.$$Document.clearMouseEvents(element);
            var currentSceneObject = scene !== 2 ? (
                scene >= 3 ? (Network.NetworkScene.initScene(element.offsetWidth, element.offsetHeight), Network.NetworkScene.setEventsMouse(element, element.offsetWidth, element.offsetHeight), Caml_array.get(Network.NetworkScene.scene, 0)) : (Pentagon.PentagonScene.initScene(element), Caml_array.get(Pentagon.PentagonScene.scene, 0))
              ) : (BallWorld.BallWorldScene.initScene(element.offsetWidth, element.offsetHeight), element.onmousemove = (function (e) {
                    BallWorld.BallWorldScene.onMouseMove(e, element.offsetWidth, element.offsetHeight);
                    
                  }), Caml_array.get(BallWorld.BallWorldScene.scene, 0));
            if (WebGL.validElementById("webgl-canvas")) {
              var canvasElement = document.getElementById("webgl-canvas");
              setTimeout((function (param) {
                      return WebGL.changeClassName(canvasElement, "webgl-fade-in");
                    }), 500);
            } else {
              WebGL.Three.renderer.setSize(element.offsetWidth, element.offsetHeight);
              WebGL.Three.renderer.setPixelRatio(window.devicePixelRatio);
              element.appendChild(WebGL.Three.renderer.domElement);
              WebGL.setCanvasStyle(WebGL.Three.renderer.domElement);
            }
            return animate(scene, WebGL.Three.getCamera(element), currentSceneObject, WebGL.Three.renderer);
          }), 500);
    return ;
  }
  
}

function Carousel(Props) {
  var match = React.useState(function () {
        return /* Pentagon */1;
      });
  var scene = match[0];
  var sceneClassname;
  switch (scene) {
    case /* Laser */0 :
        sceneClassname = "laser";
        break;
    case /* Pentagon */1 :
        sceneClassname = "pentagon";
        break;
    case /* Ball */2 :
        sceneClassname = "ball";
        break;
    case /* Network */3 :
        sceneClassname = "network";
        break;
    
  }
  React.useEffect((function () {
          renderScene(scene);
          
        }), []);
  return React.createElement("div", {
              className: "hero " + sceneClassname,
              id: "webgl-background"
            }, React.createElement("div", {
                  className: "container"
                }, React.createElement("h1", undefined, "Technical partner for startups in Asia"), React.createElement("p", undefined, "specializing in Artificial Intelligence, VR, and other cutting-edge technologies.")));
}

var make = Carousel;

export {
  saveToLocalStorage ,
  loadFromLocalStorage ,
  selectScene ,
  sceneToString ,
  stringToScene ,
  animate ,
  renderScene ,
  make ,
  
}
/* WebGL Not a pure module */
